import express, { Express, NextFunction, Request, Response } from "express";
import { GitHubServerApp } from "models/github-server-app";

describe("PUT /jira/connect/enterprise/app/:uuid", () => {
	let app: Express;

	beforeEach(async () => {
		app = express();
		app.use((req: Request, res: Response, next: NextFunction) => {
			res.locals = { installation };
			req.log = getLogger("test");
			req.session = { jiraHost };
			next();
		});
		app.use(JiraConnectEnterpriseAppRouter);
	});

	it("should return 200 on correct PUT for /jira/connect/enterprise/app/:uuid", async () => {
		return supertest(app)
			.post("/jira/sync")
			.query({
				jwt
			})
			.send({
				installationId: installation.id,
				jiraHost,
				syncType: "full"
			})
			.expect(202)
			.then(() => {
				expect(sqsQueues.backfill.sendMessage).toBeCalledWith({ installationId: installation.id, jiraHost, startTime: expect.anything() }, expect.anything(), expect.anything());
			});
	});
});
