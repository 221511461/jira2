buildNumber: 0.0.0
name: Github For Jira
description: Connect app for integrating GitHub into Jira
organization: Engineering-DevOps
notifications:
  email: fusion-arc@atlassian.com
tags:
  brahmos: enabled

compose:
  pgbouncer:
    image: docker.atl-paas.net/sox/micros/pgbouncer
    tag: 1.15.0
    command: [ "database" ]
  microservice:
    image: ${DOCKER_IMAGE_NAME}
    tag: ${DOCKER_IMAGE_TAG}
    ports:
      - 8080:8080
    links:
      - pgbouncer
      - cryptor
    depends_on:
      - cryptor
  cryptor:
    image: docker.atl-paas.net/sox/cryptor-sidecar-application
    tag: 1.1-stable-release

computeClassification:
  dataType:
    - UGC/Label                # name of GitHub org / Jira site
    - PII/IndirectConfidential # name of GitHub org
    - UGC/Configuration        # data about the installation of the GitHub app into Jira sites
    - Security/Secret          # shared Connect secret
    - UGC/PrimaryIdentifier    # references to GitHub entities (commits, pull requests, etc.) and Jira issues
    - UGC/Primary              # GitHub entities (non-persistent) like commits, pull requests, etc.

links:
  healthcheck:
    uri: healthcheck
  deepcheck:
    uri: deepcheck
  source:
    url: git@bitbucket.org:atlassian/github-jira-integration.git

httpRedirect: true

cleanup: false

serviceProxy:
  enabled: true
  ingress:
    authentication:
      enabled: true
  plugins:
    auth:
      logLevel: info
      authentication:
        plugins:
          - type: asap
          - type: slauthtoken
      authorization:
        plugins:
          - type: poco

lifecycleEvents:
  source: queue
  # Number of seconds between the termination message and when the instance is terminated.
  timeout: 30

resources:
  - type: redisx
    name: cache
    attributes:
      version: 6.x
      size: 500
      clusterModeEnabled: false
      transitEncryptionEnabled: true
      dataType:
        - UGC/Label                # name of GitHub org / Jira site
        - PII/IndirectConfidential # name of GitHub org
        - UGC/PrimaryIdentifier    # references to GitHub entities (commits, pull requests, etc.) and Jira issues

  - type: sqs
    name: backfill
    attributes:
      MaxReceiveCount: 3
      MessageRetentionPeriod: 1209600
      VisibilityTimeout: 602 #Visibility timeout will be overridden by the SQS Listener when we read message from the queue. We set it here anyway in case if that override fails.
      dataType:
        - UGC/Label                # name of GitHub org
        - PII/IndirectConfidential # name of GitHub org

  - type: sqs
    name: push
    attributes:
      MaxReceiveCount: 5
      MessageRetentionPeriod: 1209600
      VisibilityTimeout: 62 #Visibility timeout will be overridden by the SQS Listener when we read message from the queue. We set it here anyway in case if that override fails
      dataType:
        - UGC/Label                # name of GitHub org
        - PII/IndirectConfidential # name of GitHub org
        - UGC/PrimaryIdentifier    # references to GitHub entities (commits, pull requests, etc.) and Jira issues

  - type: sqs
    name: deployment
    attributes:
      MaxReceiveCount: 5
      MessageRetentionPeriod: 1209600
      VisibilityTimeout: 62 #Visibility timeout will be overridden by the SQS Listener when we read message from the queue. We set it here anyway in case if that override fails
      dataType:
        - UGC/Label                # name of GitHub org, URL/name of Jira site
        - PII/IndirectConfidential # name of GitHub org
        - UGC/PrimaryIdentifier    # references to GitHub entities (commits, pull requests, etc.) and Jira issues

  - type: sqs
    name: branch
    attributes:
      MaxReceiveCount: 5
      MessageRetentionPeriod: 1209600
      VisibilityTimeout: 62 #Visibility timeout will be overridden by the SQS Listener when we read message from the queue. We set it here anyway in case if that override fails
      dataType:
        - UGC/Label                # name of GitHub org, URL/name of Jira site
        - PII/IndirectConfidential # name of GitHub org
        - UGC/PrimaryIdentifier    # references to GitHub entities (commits, pull requests, etc.) and Jira issues

  - name: rds
    type: dedicated-rds
    attributes:
      dataType:
        - UGC/Label                # name of GitHub org / Jira site
        - PII/IndirectConfidential # name of GitHub org
      parameters:
        DBType: postgres1211
        CustomParameters:
          log_min_duration_statement: 5000

  - name: database
    type: postgres-db
    attributes:
      connectionLimit: 150 # keep in sync with PGBOUNCER_DEFAULT_POOL_SIZE.
        # For ddev and staging we have scaling policy different from prod: up to 5 Worker and up to 5 WebServer nodes.
        # Therefore, when all the nodes are running, we might have up to "PGBOUNCER_DEFAULT_POOL_SIZE * 10" number
        # of connections.
      dataType:
        - UGC/Label                # name of GitHub org / Jira site
        - PII/IndirectConfidential # name of GitHub org
        - UGC/Configuration        # data about the installation of the GitHub app into Jira sites
        - Security/Secret          # shared Connect secret
      dedicatedRds:
        # Name of the service that owns the RDS
        service: github-for-jira
        # Name of the RDS resource from above
        resource: rds

  - name: deployment-history-cache
    type: dynamo-db
    attributes: &table-attributes
      HashKeyName: Id
      HashKeyType: "S"
      RangeKeyName: CreatedAt
      RangeKeyType: "N"
      ReadWriteCapacityMode: ON_DEMAND
      TTLAttributeName: ExpiredAfter
      dataType:

caling:
  instance: t2.small
  min: 1
  max: 5
  metrics: &CpuMemScalingRules
    complexScalingRule:
      EvaluationPeriods: 1
      Threshold:
        Lower: 30
        Upper: 80
      Metrics:
        - Expression: "MAX([cpuUsage, memoryUsage])"
          Id: "combinedCpuRam"
          Label: "Scaling based on CPU and Memory consumption"
        - MetricStat:
            Metric:
              # Dimensions can be ignored here due to defaulting
              MetricName: CPUUtilization
              Namespace: AWS/EC2
            Period: 300
            Stat: Maximum
          Id: cpuUsage
          ReturnData: false
        - MetricStat:
            Metric:
              # Dimensions can be ignored here due to defaulting
              MetricName: MemoryUtilization
              Namespace: System/Linux
            Period: 300
            Stat: Maximum
          Id: memoryUsage
          ReturnData: false

alarms:
  overrides:
    MemoryConsumptionAlert:
      Namespace: System/Linux
      MetricName: MemoryUtilization
      Description: "Memory utilization is more than 90%"
      Threshold: 90
      Priority: Low
      EvaluationPeriods: 5
      Period: 120
      ComparisonOperator: GreaterThanThreshold
      Statistic: Average
    HighSeverityAlarmWhenTooManyBackend5xxErrors: null
    HighSeverityAlarmWhenTooManyELB5xxErrors: null
    LowSeverityAlarmWhenTooManyBackend5xxErrors: null
    LowSeverityAlarmWhenTooManyELB5xxErrors: null

config:
	  environmentVariables:
    NODE_ENV: production
    NODE_OPTIONS: "--no-deprecation"
    LOG_LEVEL: info
    PORT: "8080"
    CONCURRENT_WORKERS: "40"
    PG_DATABASE_BOUNCER: pgbouncer
    GIT_COMMIT_SHA: ${GIT_COMMIT_SHA}
    GIT_COMMIT_DATE: ${GIT_COMMIT_DATE}
    GIT_BRANCH_NAME: ${GIT_BRANCH_NAME}
    DEPLOYMENT_DATE: ${DEPLOYMENT_DATE}
    PRIVATE_KEY: vault://secret/data/builds/micros-sv--github-for-jira-dl-admins/github-app-private-key-stg
    GITHUB_CLIENT_SECRET: vault://secret/data/builds/micros-sv--github-for-jira-dl-admins/github-app-client-secret-stg
    WEBHOOK_SECRETS: vault://secret/data/builds/micros-sv--github-for-jira-dl-admins/github-app-webhook-secrets-stg
    COOKIE_SESSION_KEY: vault://secret/data/builds/micros-sv--github-for-jira-dl-admins/github-app-cookie-session-key-stg

    CRYPTOR_URL: http://cryptor:26272
    CRYPTOR_SIDECAR_CLIENT_IDENTIFICATION_CHALLENGE: "6CF9E6A52167B58CBB0DED180CC8B848" # https://developer.atlassian.com/platform/cryptor/integration/integrating-sidecar/#enabling-ssrf-protection
    # These secret environment variables need to be stashed with "atlas micros stash" for each environment:
    # STORAGE_SECRET: secret generated by running openssl rand -hex 32
    # SENTRY_DSN: client key required to connect to Sentry
    # WEBHOOK_SECRET: the webhook secret configured in the GitHub app
    PGBOUNCER_POOL_MODE: "session"
    PGBOUNCER_DEFAULT_POOL_SIZE: "15" # Max scale up:
                      #   (15 web servers + 15 workers) * 15 pool size  = 450 connections (See postgres-db connections limit)
                      # Normal business:
                      #   (5 web servers + 3 workers) * 15 pool size = 120 connections
    PGBOUNCER_SERVER_IDLE_TIMEOUT: "60"
    PGBOUNCER_MAX_CLIENT_CONN: "1000"

loadBalancer:
  type: ALB
  single: true
  slowStart: 180

workers:
  - name: Worker
    scaling:
      instance: t2.small
      min: 1
      max: 5
      metrics: &CpuMemAndQueuesScalingRules
        complexScalingRule:
          EvaluationPeriods: 3
          Threshold:
            # Scale down if max value from queues, cpu and memory is below 30 for 3 consecutive periods of 60 seconds
            Lower: 30
            # Scale up if max value from queues, cpu and memory is over 80 for 3 consecutive periods of 60 seconds
            Upper: 80
          Metrics:
            - Expression: "MAX([cpuUsage, memoryUsage, (pushQueueMessages/250)*100, (backfillQueueMessages/10)*100, (branchQueueMessages/250)*100, (deploymentQueueMessages/250)*100])"
              Id: "combinedCpuRamAndQueues"
              Label: "Scaling based on Queue Sizes and CPU and Memory consumption"
            - MetricStat:
                Metric:
                  # Dimensions can be ignored here due to defaulting
                  MetricName: CPUUtilization
                  Namespace: AWS/EC2
                Period: 60
                Stat: Maximum
              Id: cpuUsage
              ReturnData: false
            - MetricStat:
                Metric:
                  # Dimensions can be ignored here due to defaulting
                  MetricName: MemoryUtilization
                  Namespace: System/Linux
                Period: 60
                Stat: Maximum
              Id: memoryUsage
              ReturnData: false
            - MetricStat:
                Metric:
                  MetricName: ApproximateNumberOfMessagesVisible
                  Namespace: AWS/SQS
                  Dimensions:
                    - LogicalQueueName: 'push'
                Period: 60
                Stat: Maximum
              Id: pushQueueMessages
              ReturnData: false
            - MetricStat:
                Metric:
                  MetricName: ApproximateNumberOfMessagesVisible
                  Namespace: AWS/SQS
                  Dimensions:
                    - LogicalQueueName: 'backfill'
                Period: 60
                Stat: Maximum
              Id: backfillQueueMessages
              ReturnData: false
            - MetricStat:
                Metric:
                  MetricName: ApproximateNumberOfMessagesVisible
                  Namespace: AWS/SQS
                  Dimensions:
                    - LogicalQueueName: 'branch'
                Period: 60
                Stat: Maximum
              Id: branchQueueMessages
              ReturnData: false
            - MetricStat:
                Metric:
                  MetricName: ApproximateNumberOfMessagesVisible
                  Namespace: AWS/SQS
                  Dimensions:
                    - LogicalQueueName: 'deployment'
                Period: 60
                Stat: Maximum
              Id: deploymentQueueMessages
              ReturnData: false

environmentOverrides:
  ddev:
    scaling:
      min: 2
      max: 3
      instance: m5.large
  stg-west:
    scaling:
      min: 1
      max: 3
      instance: t3.small
    serviceProxy:
      egress:
        dependencies:
          - name: rollcall
  prod-east:
    scaling:
      min: 2
      max: 3
      instance: m5.large
