openapi: "3.0.1"
info:
  title: Github for Jira Gateway
  description: It routes things
  version: "0.0.1"

paths:
  /{proxy+}:
    parameters:
      - name: "proxy+"
        in: "path"
        description: "Generated path parameter for proxy+"
        required: true
        schema:
          type: "string"
    x-amazon-apigateway-any-method:
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        type: "http_proxy"
        httpMethod: "ANY"
        requestParameters:
          integration.request.header.Host: "'{{ServerHost}}'"
          integration.request.path.proxy: "method.request.path.proxy"
        uri: "https://{{ServerHost}}/{proxy}"
        connectionType: "INTERNET"

  /github/webhooks:
    post:
      responses:
        200:
          description: "Default response for POST /github/webhooks"
          responseTemplates:
            application/json: ""
      x-amazon-apigateway-integration:
        credentials: "{{RoleARN}}"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:{{GithubQueueRegion}}:sqs:path/{{AccountNumber}}/{{GithubQueueName}}"
        requestParameters:
          integration.request.header.Content-Type: "'application/x-www-form-urlencoded'"
        requestTemplates:
          application/json: Action=SendMessage&MessageBody={"headers":$input.params().get('header'),body":$input.json('$')}
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "never"
        type: "aws"

  /jira/events:
    post:
      responses:
        200:
          description: "Default response for POST /jira/webhooks"
          responseTemplates:
            application/json: ""
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        credentials: "{{RoleARN}}"
        uri: "arn:aws:apigateway:{{JiraQueueRegion}}:sqs:path/{{AccountNumber}}/{{JiraQueueName}}"
        requestParameters:
          integration.request.header.Content-Type: "'application/x-www-form-urlencoded'"
        requestTemplates:
          application/json: Action=SendMessage&MessageBody={"headers":$input.params().get('header'),"query":$input.params().get('querystring'),"path":$input.params().get('path'),"body":$input.json('$')}
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "never"
        type: "aws"
