openapi: "3.0.1"
info:
  title: Github for Jira Gateway
  description: It routes things
  version: "0.0.1"

paths:
  # GITHUB WEBHOOKS
  /webhooks/{event+}:
    parameters:
      - name: "event+"
        in: "path"
        description: "Generated path parameter for event+"
        required: true
        schema:
          type: "string"
    post:
      responses:
        204:
          description: "Default response for POST webhooks"
      x-amazon-apigateway-integration:
        credentials: "{{RoleARN}}"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:{{WebhooksQueueRegion}}:sqs:path/{{AccountNumber}}/{{WebhooksQueueName}}"
        requestParameters:
          integration.request.header.Content-Type: "'application/x-www-form-urlencoded'"
        requestTemplates:
          application/json: |
            Action=SendMessage&MessageBody={
            #set($allParams = $input.params())
            #foreach($type in $allParams.keySet())
            #set($params = $allParams.get($type))
            "$type" : {
              #foreach($paramName in $params.keySet())
              "$paramName" : "$util.escapeJavaScript($params.get($paramName))"#if($foreach.hasNext),#end
              #end
            },#end
            "method":"$context.httpMethod",
            "event":"$util.escapeJavaScript($input.params('event'))",
            "url":"{{Domain}}$context.path",
            "body":$input.body
            }
        responses:
          default:
            statusCode: "204"
        passthroughBehavior: "never"
        type: "aws"

  # EVERYTHING ELSE
  /{proxy+}:
    parameters:
      - name: "proxy+"
        in: "path"
        description: "Generated path parameter for proxy+"
        required: true
        schema:
          type: "string"
    x-amazon-apigateway-any-method:
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        type: "http_proxy"
        httpMethod: "ANY"
        requestParameters:
          integration.request.header.Host: "'{{ServerHost}}'"
          integration.request.path.proxy: "method.request.path.proxy"
        uri: "https://{{ServerHost}}/{proxy}"
        connectionType: "INTERNET"
