openapi: "3.0.1"
info:
  title: Github for Jira Gateway
  description: It routes things
  version: "0.0.1"

paths:
#  /$default:
#    x-amazon-apigateway-any-method:
#      isDefaultRoute: true
#      x-amazon-apigateway-integration:
#        payloadFormatVersion: "1.0"
#        type: "http_proxy"
#        httpMethod: "ANY"
#        requestParameters:
#          integration.request.header.Host: "'{{ServerHost}}'"
#        uri: "https://{{ServerHost}}"
#        connectionType: "INTERNET"

  /{proxy+}:
    parameters:
      - name: "proxy+"
        in: "path"
        description: "Generated path parameter for proxy+"
        required: true
        schema:
          type: "string"
    x-amazon-apigateway-any-method:
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        type: "http_proxy"
        httpMethod: "ANY"
        requestParameters:
          integration.request.header.Host: "'{{ServerHost}}'"
          integration.request.path.proxy: "method.request.path.proxy"
        uri: "https://{{ServerHost}}/{proxy}"
        connectionType: "INTERNET"

  /github/webhooks:
    post:
      responses:
        200:
          description: "Default response for POST /github/webhooks"
      x-amazon-apigateway-integration:
        integrationSubtype: "SQS-SendMessage"
        credentials: "{{RoleARN}}"
        httpMethod : "POST"
        uri: "arn:aws:apigateway:{{GithubQueueRegion}}:sqs:path/{{AccountNumber}}/{{GithubQueueName}}/?Action=SendMessage"
        requestParameters:
          MessageAttributes: "$request.body.MessageAttributes"
          MessageSystemAttributes: "$request.body.MessageSystemAttributes"
          MessageBody: "$request.body.MessageBody"
          QueueUrl: "{{GithubQueueUrl}}"
        payloadFormatVersion: "1.0"
        type: "aws"
        connectionType: "INTERNET"
        timeoutInMillis: 30000
#      x-amazon-apigateway-integration:
#        credentials: "{{RoleARN}}"
#        httpMethod: "POST"
#        uri: "{{GithubQueueARN}}?Action=SendMessage"
#        responses:
#          default:
#            statusCode: "200"
#        requestParameters:
#          integration.request.header.Content-Type: "'application/x-www-form-urlencoded'"
#          integration.request.querystring.MessageBody: "method.request.body.MessageBody"
##        requestTemplates:
##          application/json: "Action=SendMessage&MessageBody=$input.body"
#        passthroughBehavior: "never"
#        type: "aws"

  /jira/events:
    post:
      responses:
        200:
          description: "Default response for POST /jira/webhooks"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        integrationSubtype: "SQS-SendMessage"
        credentials: "{{RoleARN}}"
        uri: "arn:aws:apigateway:{{JiraQueueRegion}}:sqs:path/{{AccountNumber}}/{{JiraQueueName}}/?Action=SendMessage"
        requestParameters:
          MessageAttributes: "$request.body.MessageAttributes"
          MessageSystemAttributes: "$request.body.MessageSystemAttributes"
          MessageBody: "$request.body.MessageBody"
          QueueUrl: "{{JiraQueueUrl}}"
        payloadFormatVersion: "1.0"
        type: "aws"
        connectionType: "INTERNET"
        timeoutInMillis: 30000
#      x-amazon-apigateway-integration:
#        credentials: "{{RoleARN}}"
#        httpMethod: "POST"
#        uri: "{{JiraQueueARN}}?Action=SendMessage"
#        responses:
#          default:
#            statusCode: "200"
#        requestParameters:
#          integration.request.header.Content-Type: "'application/x-www-form-urlencoded'"
#          integration.request.querystring.MessageBody: "method.request.body.MessageBody"
##        requestTemplates:
##          application/json: "Action=SendMessage&MessageBody=$input.body"
#        passthroughBehavior: "never"
#        type: "aws"
x-amazon-apigateway-importexport-version: "1.0"
