
FROM docker.atl-paas.net/sox/micros-node-14:1.0.5 as build

# root user for installs
USER root

# adding python for node-gyp
RUN apt-get update && apt-get install -y g++ make python3

# For coredumps
RUN apt-get install -y gdb

# non-root user
USER appuser

COPY . /opt/service

WORKDIR /opt/service

# Change ownership of the /opt/service directory to root
USER root
RUN chown -R root:root /opt/service

# Installing packages
USER appuser
RUN rm .yarnrc
RUN yarn install --frozen-lockfile
RUN yarn list

# Building TypeScript files
RUN yarn run build:release

FROM docker.atl-paas.net/sox/micros-node-14:1.0.5

# root user for installs
USER root

# For debugging curl command
RUN apt-get install -y curl

# For coredumps
RUN apt-get install -y gdb

# Copy files as root
COPY --from=build /opt/service /opt/service

# Change ownership back to appuser after COPY
RUN chown -R appuser:appuser /opt/service

# Add this the service Dockerfile, at the final stage if multi-stage
COPY --from=docker.atl-paas.net/sox/brahmos-deps/stress-ng:latest /usr/bin/stress-ng /usr/bin/stress-ng

# non-root user
USER appuser

WORKDIR /opt/service
ENV NODE_ENV production

#
# If you are going to remove this, please make sure that it doesn't break existing GitHubServerApps:
#   1. create an API endpoint that calls all prod servers and checks for SSL checks in stg
#   2. deploy change without this line to stg
#   3. call the API endpoint again; compare results with the ones from #1
# Details:
#   https://github.com/nodejs/node/issues/16336#issuecomment-568845447
#
# ENV NODE_EXTRA_CA_CERTS=node_modules/node_extra_ca_certs_mozilla_bundle/ca_bundle/ca_intermediate_root_bundle.pem

CMD ["./bin/start-server-micros.sh"]
