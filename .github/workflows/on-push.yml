name: Push

on: [ push, pull_request ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install Yarn
        run: npm install -g yarn
      - uses: actions/checkout@v1
      - uses: volta-cli/action@v1
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - run: volta pin yarn@latest
      - run: yarn install --frozen-lockfile
      - run: yarn run lint
      - run: yarn run build

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Install Yarn
        run: npm install -g yarn
      - uses: actions/checkout@v1
      - run: docker-compose up -d app
      - uses: volta-cli/action@v1
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - run: volta pin yarn@latest
      - run: yarn install --frozen-lockfile
      - run: yarn run db:test
      - name: Run tests
        env:
          REDISX_CACHE_HOST: localhost
          REDISX_CACHE_PORT: ${{ job.services.redis.ports[6379] }}
          DATABASE_URL: postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/jira-test
          AWS_DEFAULT_REGION: us-west-1
          AWS_ACCESS_KEY_ID: localkey
          AWS_SECRET_ACCESS_KEY: localsecret
          AWS_EC2_METADATA_DISABLED: true
        run: yarn test

  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Build and push Docker image
        uses: docker/build-push-action@v2.7.0
        with:
          file: Dockerfile
      - name: Build and push Docker image
        uses: docker/build-push-action@v2.7.0
        with:
          file: Dockerfile.prod
